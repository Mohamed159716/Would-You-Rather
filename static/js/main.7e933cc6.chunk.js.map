{"version":3,"sources":["actions/authedUser.js","utils/_DATA.js","actions/users.js","utils/api.js","actions/questions.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","preferences.svg","components/login/login.js","actions/shared.js","components/question/question.js","components/home/home.js","notfound.svg","components/notfound/notfound.js","components/nav/nav.js","components/new-question/new-question.js","components/leader-board/leader-board.js","components/poll-answer/poll-answer.js","components/poll-result/poll-result.js","components/poll-box/poll-box.js","App.js","index.js"],"names":["SET_AUTHED_USER","REMOVE_AUTHED_USER","handleSetAuthedUser","userId","dispatch","type","setAuthedUser","removeAuthedUser","users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_saveQuestion","question","console","log","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","RECEIVE_USERS","ADD_ANSWER_TO_USER","ADD_USER_QUESTION","receiveUsers","handleSaveUserAnswer","qid","answer","addAnswerToUser","handleAddUserQuestion","addUserQuestion","saveQuestionAnswer","info","_saveQuestionAnswer","RECEIVE_QUESTIONS","SAVE_QUESTION_ANSWER","ADD_QUESTION","handleSaveQuestionAnswer","then","questionAnswer","handleAddQuestion","addQuestion","combineReducers","state","action","logger","store","next","group","result","getState","groupEnd","applyMiddleware","thunk","Login","active","avatar","alt","toggleClass","setState","selectedUser","handleSubmit","e","preventDefault","props","history","push","this","className","src","preferences","onSubmit","onClick","Fragment","Object","keys","map","user","disabled","Component","connect","handleInitialData","all","receiveQuestions","to","Home","handleQuestions","unansweredQuestions","answeredQuestions","filteredQuestions","currentUser","questionIds","sort","a","b","includes","NotFound","notfound","Nav","logout","replace","exact","activeClassName","withRouter","NewQuestion","handleChange","target","value","OptionOne","placeholder","onChange","leaderBoard","assign","totalCreatedQuestions","length","totalAnswers","totalQuestions","leaderBoardSorted","values","leader","PollAnswer","option","dataset","questionId","questionUser","currentQuestion","data-option","htmlFor","totalVotes","optionOneVote","optionTwoVote","optionOnePercentage","round","optionTwoPercentage","style","width","match","params","App","loading","path","component","LeaderBoard","PollBox","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e933cc6.chunk.js","sourcesContent":["export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\nexport const REMOVE_AUTHED_USER = \"REMOVE_AUTHED_USER\";\r\n\r\nexport function setAuthedUser(userId) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        userId,\r\n    };\r\n}\r\n\r\nexport function handleSetAuthedUser(userId) {\r\n    return (dispatch) => {\r\n        dispatch(setAuthedUser(userId));\r\n    };\r\n}\r\n\r\nexport function removeAuthedUser() {\r\n    return {\r\n        type: REMOVE_AUTHED_USER,\r\n    };\r\n}\r\n\r\nexport function handleRemoveAuthedUser() {\r\n    return (dispatch) => {\r\n        dispatch(removeAuthedUser);\r\n    };\r\n}\r\n","let users = {\r\n    sarahedo: {\r\n        id: \"sarahedo\",\r\n        name: \"Sarah Edo\",\r\n        avatarURL:\r\n            \"https://images.pexels.com/photos/3258702/pexels-photo-3258702.jpeg?auto=compress&cs=tinysrgb&h=650&w=940\",\r\n        answers: {\r\n            \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n            \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n            am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n            loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n        },\r\n        questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n    },\r\n    tylermcginnis: {\r\n        id: \"tylermcginnis\",\r\n        name: \"Tyler McGinnis\",\r\n        avatarURL:\r\n            \"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\",\r\n        answers: {\r\n            vthrdm985a262al8qx3do: \"optionOne\",\r\n            xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n        },\r\n        questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n    },\r\n    johndoe: {\r\n        id: \"johndoe\",\r\n        name: \"John Doe\",\r\n        avatarURL:\r\n            \"https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\",\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: \"optionOne\",\r\n            vthrdm985a262al8qx3do: \"optionTwo\",\r\n            \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n        },\r\n        questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n    },\r\n};\r\n\r\nlet questions = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: \"8xf0y6ziyjabvozdd253nd\",\r\n        author: \"sarahedo\",\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: [\"sarahedo\"],\r\n            text: \"have horrible short term memory\",\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: \"have horrible long term memory\",\r\n        },\r\n    },\r\n    \"6ni6ok3ym7mf1p33lnez\": {\r\n        id: \"6ni6ok3ym7mf1p33lnez\",\r\n        author: \"johndoe\",\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: \"become a superhero\",\r\n        },\r\n        optionTwo: {\r\n            votes: [\"johndoe\", \"sarahedo\"],\r\n            text: \"become a supervillain\",\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: \"am8ehyc8byjqgar0jgpub9\",\r\n        author: \"sarahedo\",\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: \"be telekinetic\",\r\n        },\r\n        optionTwo: {\r\n            votes: [\"sarahedo\"],\r\n            text: \"be telepathic\",\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: \"loxhs1bqm25b708cmbf3g\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: \"be a front-end developer\",\r\n        },\r\n        optionTwo: {\r\n            votes: [\"sarahedo\"],\r\n            text: \"be a back-end developer\",\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: \"vthrdm985a262al8qx3do\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: [\"tylermcginnis\"],\r\n            text: \"find $50 yourself\",\r\n        },\r\n        optionTwo: {\r\n            votes: [\"johndoe\"],\r\n            text: \"have your best friend find $500\",\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: \"xj352vofupe1dqz9emx13r\",\r\n        author: \"johndoe\",\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: [\"johndoe\"],\r\n            text: \"write JavaScript\",\r\n        },\r\n        optionTwo: {\r\n            votes: [\"tylermcginnis\"],\r\n            text: \"write Swift\",\r\n        },\r\n    },\r\n};\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random().toString(36).substring(2, 15) +\r\n        Math.random().toString(36).substring(2, 15)\r\n    );\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000);\r\n    });\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000);\r\n    });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    console.log(\"Save Question\");\r\n    console.log(question);\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author;\r\n        const formattedQuestion = formatQuestion(question);\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            };\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([\r\n                        formattedQuestion.id,\r\n                    ]),\r\n                },\r\n            };\r\n\r\n            res(formattedQuestion);\r\n        }, 1000);\r\n    });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            };\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([\r\n                            authedUser,\r\n                        ]),\r\n                    },\r\n                },\r\n            };\r\n\r\n            res({ authedUser, qid, answer });\r\n        }, 500);\r\n    });\r\n}\r\n","import { _getUsers } from \"../utils/_DATA\";\r\n\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const ADD_ANSWER_TO_USER = \"ADD_ANSWER_TO_USER\";\r\nexport const ADD_USER_QUESTION = \"ADD_USER_QUESTION\";\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    };\r\n}\r\n\r\nexport const handleGetUsers = () => {\r\n    return (dispatch) => {\r\n        _getUsers().then((users) => dispatch(receiveUsers(users)));\r\n    };\r\n};\r\n\r\nexport function addAnswerToUser(authedUser, qid, answer) {\r\n    return {\r\n        type: ADD_ANSWER_TO_USER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    };\r\n}\r\n\r\nexport function handleSaveUserAnswer(authedUser, qid, answer) {\r\n    return (dispatch) => {\r\n        dispatch(addAnswerToUser(authedUser, qid, answer));\r\n    };\r\n}\r\n\r\nexport function addUserQuestion(question) {\r\n    return {\r\n        type: ADD_USER_QUESTION,\r\n        question,\r\n    };\r\n}\r\n\r\nexport function handleAddUserQuestion(question) {\r\n    return (dispatch) => {\r\n        dispatch(addUserQuestion(question));\r\n    };\r\n}\r\n","import {\r\n    _getUsers,\r\n    _getQuestions,\r\n    _saveQuestion,\r\n    _saveQuestionAnswer,\r\n} from \"./_DATA.js\";\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(\r\n        ([users, questions]) => ({\r\n            users,\r\n            questions,\r\n        })\r\n    );\r\n}\r\n\r\nexport function saveQuestion(info) {\r\n    console.log(\"api saveQuestion\");\r\n    console.log(info);\r\n    return _saveQuestion(info);\r\n}\r\n\r\nexport function saveQuestionAnswer(info) {\r\n    return _saveQuestionAnswer(info);\r\n}\r\n","import { saveQuestionAnswer, saveQuestion } from \"./../utils/api\";\r\nimport { handleSaveUserAnswer, handleAddUserQuestion } from \"./users\";\r\n\r\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\r\nexport const SAVE_QUESTION_ANSWER = \"SAVE_QUESTION_ANSWER\";\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    };\r\n}\r\n\r\nexport function questionAnswer(authedUser, qid, answer) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    };\r\n}\r\n\r\nexport function handleSaveQuestionAnswer(authedUser, qid, answer) {\r\n    return (dispatch) => {\r\n        return saveQuestionAnswer({\r\n            authedUser,\r\n            qid,\r\n            answer,\r\n        }).then(({ authedUser, qid, answer }) => {\r\n            console.log(\"handleSaveQuestion\");\r\n            console.log(answer);\r\n            dispatch(questionAnswer(authedUser, qid, answer));\r\n            dispatch(handleSaveUserAnswer(authedUser, qid, answer));\r\n        });\r\n    };\r\n}\r\n\r\nexport function addQuestion(question) {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question,\r\n    };\r\n}\r\n\r\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\r\n    return (dispatch) => {\r\n        return saveQuestion({ optionOneText, optionTwoText, author }).then(\r\n            (question) => {\r\n                dispatch(addQuestion(question));\r\n                dispatch(handleAddUserQuestion(question));\r\n            }\r\n        );\r\n    };\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authedUser from \"./authedUser\";\r\nimport users from \"./users\";\r\nimport questions from \"./questions\";\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n});\r\n","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from \"./../actions/authedUser\";\r\n\r\nexport default function authedUser(state = null, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return action.userId;\r\n        case REMOVE_AUTHED_USER:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_USERS,\r\n    ADD_ANSWER_TO_USER,\r\n    ADD_USER_QUESTION,\r\n} from \"./../actions/users\";\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                ...action.users,\r\n            };\r\n        case ADD_ANSWER_TO_USER:\r\n            return {\r\n                ...state,\r\n                [action.authedUser]: {\r\n                    ...state[action.authedUser],\r\n                    answers: {\r\n                        ...state[action.authedUser].answers,\r\n                        [action.qid]: action.answer,\r\n                    },\r\n                },\r\n            };\r\n        case ADD_USER_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.question.author]: {\r\n                    ...state[action.question.author],\r\n\r\n                    questions: [\r\n                        ...state[action.question.author].questions,\r\n                        action.question.id,\r\n                    ],\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    SAVE_QUESTION_ANSWER,\r\n    ADD_QUESTION,\r\n} from \"./../actions/questions\";\r\n\r\nexport default function questions(state = {}, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                ...action.questions,\r\n            };\r\n        case SAVE_QUESTION_ANSWER:\r\n            return {\r\n                ...state,\r\n                [action.qid]: {\r\n                    ...state[action.qid],\r\n                    [action.answer]: {\r\n                        ...state[action.qid][action.answer],\r\n                        votes: [\r\n                            ...state[action.qid][action.answer].votes,\r\n                            action.authedUser,\r\n                        ],\r\n                    },\r\n                },\r\n            };\r\n        case ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.question.id]: action.question,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log(\"The action: \", action);\r\n    const result = next(action);\r\n    console.log(\"The new state: \", store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\n\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nimport logger from \"./logger\";\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","export default __webpack_public_path__ + \"static/media/preferences.9f7ee0ba.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiDownArrow } from \"react-icons/bi\";\r\n\r\nimport preferences from \"../../preferences.svg\";\r\n\r\nimport \"./login.styles.scss\";\r\nimport { handleSetAuthedUser } from \"./../../actions/authedUser\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        active: true,\r\n        userId: null,\r\n        name: null,\r\n        avatar: null,\r\n        alt: null,\r\n    };\r\n\r\n    toggleClass = () => {\r\n        let { active } = this.state;\r\n\r\n        this.setState({ active: !active });\r\n    };\r\n\r\n    selectedUser = (userId, name, avatar) => {\r\n        this.setState({ userId, name, avatar, alt: name });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { userId } = this.state;\r\n        this.props.dispatch(handleSetAuthedUser(userId));\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    render() {\r\n        const { active, name, avatar, alt } = this.state;\r\n        const { users } = this.props;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Welcome to the Would You Rather App!</h2>\r\n                <img\r\n                    src={preferences}\r\n                    alt=\"preferences\"\r\n                    className=\"preferences\"\r\n                />\r\n                <form className=\"form-container\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"select-user-box\" onClick={this.toggleClass}>\r\n                        <div className=\"selected-user\">\r\n                            <div className=\"user-info\">\r\n                                {name !== null ? (\r\n                                    <React.Fragment>\r\n                                        <img src={avatar} alt={alt} />\r\n                                        <span>{name}</span>\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <span>Select the User</span>\r\n                                )}\r\n                            </div>\r\n                            <BiDownArrow className=\"down-arrow\" />\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`user-login-box ${\r\n                                active ? \"active\" : \"\"\r\n                            }`}\r\n                        >\r\n                            {Object.keys(users).map((user) => (\r\n                                <div\r\n                                    className=\"user-login\"\r\n                                    onClick={() =>\r\n                                        this.selectedUser(\r\n                                            users[user].id,\r\n                                            users[user].name,\r\n                                            users[user].avatarURL\r\n                                        )\r\n                                    }\r\n                                    key={users[user].id}\r\n                                >\r\n                                    <img\r\n                                        src={users[user].avatarURL}\r\n                                        alt={users[user].name}\r\n                                    />\r\n                                    <span>{users[user].name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        disabled={name === null}\r\n                        className={`login-btn ${name ? \"\" : \"disabled\"}`}\r\n                    >\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import { getInitialData } from \"./../utils/api\";\r\nimport { receiveUsers } from \"./users\";\r\nimport { receiveQuestions } from \"./questions\";\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users));\r\n            dispatch(receiveQuestions(questions));\r\n        });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./question.styles.scss\";\r\n\r\nconst Question = ({\r\n    question: { id, author, optionOne, optionTwo },\r\n    users,\r\n}) => {\r\n    const { avatarURL, name } = users[author];\r\n\r\n    return (\r\n        <div className=\"question-info\">\r\n            <img src={avatarURL} alt={name} />\r\n            <span>{name}</span>\r\n            <h4>Would you rather</h4>\r\n            <p>\r\n                {optionOne.text} <br />\r\n                ...\r\n            </p>\r\n            <Link to={`/questions/${id}`} className=\"poll-btn\">\r\n                View Poll\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Question);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Question from \"../question/question\";\r\n\r\nimport \"./home.styles.scss\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        questions: [],\r\n        type: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { unansweredQuestions } = this.props;\r\n        this.setState({ questions: unansweredQuestions, type: \"unanswered\" });\r\n    }\r\n\r\n    handleQuestions = (questions, type) => {\r\n        this.setState({ questions, type });\r\n    };\r\n\r\n    render() {\r\n        const { answeredQuestions, unansweredQuestions } = this.props;\r\n        const filteredQuestions = this.state.questions;\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n                <div className=\"btn-box\">\r\n                    <button\r\n                        className={`${\r\n                            this.state.type === \"unanswered\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() =>\r\n                            this.handleQuestions(\r\n                                unansweredQuestions,\r\n                                \"unanswered\"\r\n                            )\r\n                        }\r\n                    >\r\n                        Unanswered Questions\r\n                    </button>\r\n                    <button\r\n                        className={`${\r\n                            this.state.type === \"answered\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() =>\r\n                            this.handleQuestions(answeredQuestions, \"answered\")\r\n                        }\r\n                    >\r\n                        Answered Questions\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"question-result\">\r\n                    {filteredQuestions.map((question) => (\r\n                        <Question key={question.id} question={question} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users, authedUser }) {\r\n    const currentUser = users[authedUser];\r\n    const questionIds = Object.keys(questions).sort(\r\n        (a, b) => questions[b].timestamp - questions[a].timestamp\r\n    );\r\n\r\n    let answeredQuestions = [];\r\n    let unansweredQuestions = [];\r\n\r\n    questionIds.map((question) =>\r\n        Object.keys(currentUser.answers).includes(question)\r\n            ? answeredQuestions.push(questions[question])\r\n            : unansweredQuestions.push(questions[question])\r\n    );\r\n\r\n    return {\r\n        answeredQuestions,\r\n        unansweredQuestions,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","export default __webpack_public_path__ + \"static/media/notfound.4861ae77.svg\";","import React from \"react\";\r\nimport notfound from \"../../notfound.svg\";\r\n\r\nimport \"./notfound.styles.scss\";\r\n\r\nconst NotFound = ({ history }) => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <img src={notfound} alt=\"Not Found\" />\r\n            <button onClick={() => history.push(\"/\")} className=\"back\">\r\n                Go Back\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\n\r\nimport \"./nav.styles.scss\";\r\nimport { removeAuthedUser } from \"./../../actions/authedUser\";\r\n\r\nclass Nav extends Component {\r\n    state = {};\r\n\r\n    logout = () => {\r\n        this.props.dispatch(removeAuthedUser());\r\n\r\n        this.props.history.replace(\"/\");\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            currentUser: { name, avatarURL },\r\n        } = this.props;\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-container\">\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to=\"/\" exact activeClassName=\"active\">\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/add\" activeClassName=\"active\">\r\n                                New Question\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/leaderboard\" activeClassName=\"active\">\r\n                                Leader Board\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"data-box\">\r\n                        <span>{name}</span>\r\n                        <img src={avatarURL} alt={name} />\r\n                        <div className=\"logout-box\" onClick={this.logout}>\r\n                            <AiOutlineLogout className=\"logout\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser }) {\r\n    const currentUser = users[authedUser];\r\n    return {\r\n        currentUser,\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Nav));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { handleAddQuestion } from \"../../actions/questions\";\r\n\r\nimport \"./new-question.styles.scss\";\r\n\r\nclass NewQuestion extends Component {\r\n    state = {\r\n        optionOne: \"\",\r\n        optionTwo: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { optionOne, optionTwo } = this.state;\r\n        const { authedUser, dispatch } = this.props;\r\n\r\n        await dispatch(handleAddQuestion(optionOne, optionTwo, authedUser));\r\n\r\n        this.setState({ OptionOne: \"\", optionTwo: \"\" });\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    render() {\r\n        const { optionOne, optionTwo } = this.state;\r\n\r\n        return (\r\n            <div className=\"new-question\">\r\n                <h3>Create New Question</h3>\r\n                <div className=\"form-container\">\r\n                    <p>Would you rather...</p>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"optionOne\"\r\n                            value={this.state.optionOne}\r\n                            placeholder=\"Enter Option One Text Here\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"optionTwo\"\r\n                            value={this.state.optionTwo}\r\n                            placeholder=\"Enter Option Two Text Here\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n\r\n                        <button\r\n                            disabled={!(optionOne && optionTwo)}\r\n                            className={\r\n                                !(optionOne && optionTwo) ? \"disabled\" : \"\"\r\n                            }\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewQuestion);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./leader-board.styles.scss\";\r\n\r\nconst LeaderBoard = ({ leaderBoardSorted }) => {\r\n    return (\r\n        <div className=\"leader-board-container\">\r\n            {leaderBoardSorted.map((leader) => (\r\n                <div key={leader.id} className=\"leader-box\">\r\n                    <div className=\"data-box\">\r\n                        <img src={leader.avatarURL} alt={leader.name} />\r\n                        <span>{leader.name}</span>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"info-box\">\r\n                            <p>Answered Questions</p>\r\n                            <p>{leader.totalAnswers}</p>\r\n                        </div>\r\n                        <div className=\"info-box\">\r\n                            <p>Created Questions</p>\r\n                            <p>{leader.totalCreatedQuestions}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"scores\">\r\n                        <span className=\"score-header\">Scores</span>\r\n                        <span className=\"score-num\">\r\n                            {leader.totalQuestions}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ users }) {\r\n    const leaderBoard = Object.keys(users).map((user) =>\r\n        Object.assign({}, users[user], {\r\n            totalCreatedQuestions: users[user].questions.length,\r\n            totalAnswers: Object.keys(users[user].answers).length,\r\n            totalQuestions:\r\n                users[user].questions.length +\r\n                Object.keys(users[user].answers).length,\r\n        })\r\n    );\r\n\r\n    let leaderBoardSorted = Object.values(leaderBoard);\r\n\r\n    leaderBoardSorted.sort((a, b) => b.totalQuestions - a.totalQuestions);\r\n\r\n    return {\r\n        leaderBoardSorted,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./poll-answer.styles.scss\";\r\nimport { handleSaveQuestionAnswer } from \"./../../actions/questions\";\r\n\r\nclass PollAnswer extends Component {\r\n    state = {\r\n        votes: \"\",\r\n        option: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const value = e.target.value;\r\n        const option = e.target.dataset.option;\r\n\r\n        this.setState({ votes: value, option });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { authedUser, questionId } = this.props;\r\n        const { option } = this.state;\r\n\r\n        this.props.dispatch(\r\n            handleSaveQuestionAnswer(authedUser, questionId, option)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            questionUser: { name, avatarURL },\r\n            currentQuestion: { optionOne, optionTwo },\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"poll-answer\">\r\n                <img src={avatarURL} alt={name} />\r\n                <span>{name}</span>\r\n                <h4>Would you rather</h4>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"radio-box\">\r\n                        <input\r\n                            id=\"poll1\"\r\n                            type=\"radio\"\r\n                            name=\"votes\"\r\n                            value={optionOne.text}\r\n                            onChange={this.handleChange}\r\n                            data-option=\"optionOne\"\r\n                        />\r\n                        <label htmlFor=\"poll1\">{optionOne.text}</label>\r\n                    </div>\r\n                    <div className=\"radio-box\">\r\n                        <input\r\n                            id=\"poll2\"\r\n                            type=\"radio\"\r\n                            name=\"votes\"\r\n                            value={optionTwo.text}\r\n                            onChange={this.handleChange}\r\n                            data-option=\"optionTwo\"\r\n                        />\r\n                        <label htmlFor=\"poll2\">{optionTwo.text}</label>\r\n                    </div>\r\n                    <button\r\n                        disabled={this.state.votes === \"\"}\r\n                        className={`btn-submit ${\r\n                            this.state.votes === \"\" ? \"disabled\" : \"\"\r\n                        }`}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser, questions }, { questionId }) {\r\n    const currentQuestion = questions[questionId];\r\n    const questionUser = users[currentQuestion.author];\r\n\r\n    return {\r\n        authedUser,\r\n        questionUser,\r\n        currentQuestion,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollAnswer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./poll-result.styles.scss\";\r\n\r\nconst PollResult = ({\r\n    authedUser,\r\n    questionUser: { name, avatarURL },\r\n    currentQuestion: { optionOne, optionTwo },\r\n}) => {\r\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\r\n\r\n    const optionOneVote = optionOne.votes.includes(authedUser);\r\n    const optionTwoVote = optionTwo.votes.includes(authedUser);\r\n\r\n    const optionOnePercentage = Math.round(\r\n        (100 / totalVotes) * optionOne.votes.length\r\n    );\r\n    const optionTwoPercentage = Math.round(\r\n        (100 / totalVotes) * optionTwo.votes.length\r\n    );\r\n\r\n    return (\r\n        <div className=\"poll-result\">\r\n            <img src={avatarURL} alt={name} />\r\n            <span>{name}</span>\r\n            <h4>Result</h4>\r\n\r\n            <div className=\"votes\">\r\n                <div className=\"vote\">\r\n                    <p className=\"would-you-rather\">\r\n                        Would you rather {optionOne.text}\r\n                    </p>\r\n                    <div className=\"progress-container\">\r\n                        <span style={{ width: optionOnePercentage + \"%\" }}>\r\n                            {optionOnePercentage + \"%\"}\r\n                        </span>\r\n                    </div>\r\n                    <p>\r\n                        {optionOne.votes.length} out of {totalVotes}\r\n                    </p>\r\n                    <span\r\n                        className={`your-vote ${optionOneVote ? \"\" : \"hidden\"}`}\r\n                    >\r\n                        Your vote\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"vote\">\r\n                    <p className=\"would-you-rather\">\r\n                        Would you rather {optionOne.text}\r\n                    </p>\r\n                    <div className=\"progress-container\">\r\n                        <span style={{ width: optionTwoPercentage + \"%\" }}>\r\n                            {optionTwoPercentage + \"%\"}\r\n                        </span>\r\n                    </div>\r\n                    <p>\r\n                        {optionTwo.votes.length} out of {totalVotes}\r\n                    </p>\r\n                    <span\r\n                        className={`your-vote ${optionTwoVote ? \"\" : \"hidden\"}`}\r\n                    >\r\n                        Your vote\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ users, authedUser, questions }, { questionId }) {\r\n    const currentQuestion = questions[questionId];\r\n    const questionUser = users[currentQuestion.author];\r\n\r\n    return {\r\n        authedUser,\r\n        questionUser,\r\n        currentQuestion,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollResult);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PollAnswer from \"../poll-answer/poll-answer\";\r\nimport PollResult from \"./../poll-result/poll-result\";\r\n\r\nimport \"./poll-box.scss\";\r\n\r\nconst PollBox = (props) => {\r\n    const { currentUser } = props;\r\n    const questionId = props.match.params.id;\r\n\r\n    if (Object.keys(currentUser.answers).includes(questionId)) {\r\n        return (\r\n            <div className=\"poll-container\">\r\n                <PollResult questionId={questionId} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"poll-container\">\r\n            <PollAnswer questionId={questionId} />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ users, authedUser }) {\r\n    const currentUser = users[authedUser];\r\n\r\n    return {\r\n        currentUser,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollBox);\r\n","import React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport Login from \"./components/login/login\";\nimport { handleInitialData } from \"./actions/shared\";\nimport Home from \"./components/home/home\";\nimport NotFound from \"./components/notfound/notfound\";\nimport Nav from \"./components/nav/nav\";\nimport NewQuestion from \"./components/new-question/new-question\";\nimport LeaderBoard from \"./components/leader-board/leader-board\";\nimport PollBox from \"./components/poll-box/poll-box\";\n\nclass App extends Component {\n    state = {};\n\n    componentDidMount() {\n        this.props.dispatch(handleInitialData());\n    }\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        {this.props.loading === true ? (\n                            <React.Fragment>\n                                <Nav />\n                                <Route path=\"/add\" component={NewQuestion} />\n                                <Route\n                                    path=\"/leaderboard\"\n                                    component={LeaderBoard}\n                                />\n                                <Route\n                                    path=\"/questions/:id\"\n                                    component={PollBox}\n                                />\n                                <Route path=\"/\" exact component={Home} />\n                            </React.Fragment>\n                        ) : (\n                            <Route path=\"/\" exact component={Login} />\n                        )}\n\n                        <Route path=\"/notfound\" component={NotFound} />\n                        <Redirect to=\"/notfound\" />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ authedUser }) {\n    return {\n        loading: authedUser !== null,\n    };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}